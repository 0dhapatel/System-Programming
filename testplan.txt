All of our testcases consited of easy testcases in order to find out if the project worked accordingly. Additionally, we had complecated testcases that we thought were difficult to go over. For recursive flag, we had to create multiple text files with sub directories.

To test the build phase we have entered random words with random tabs and enters allong with letter. Example below:
 
 
 hi my	  name
 jui     jijguhief f wef we f we fwe fw ef wef e fwe
 hi
 fw ef wfw ffqwbf qwf qw fqw fqwf wqf eqf e few
 fewf wef
 wef
 we fq
 	w dq
 		 j		b		b	ub	
 		 wff
 q fq fq ibwdbwdas
 		 a
sdas
 		 das
dadasdad
wda


This was able to produce:

0000	fwe
00010	wff
00011	jijguhief
0010	b
00110	sdas
00111	fqw
0100	f
01010	eqf
01011	few
01100	qwf
011010	ffqwbf
011011	ub
0111	we
1000	fq
100100	dq
100101	wfw
100110	j
100111	w
10100	hi
101010	qw
101011	a
1011	wef
110000	q
110001	wqf
11001	ef
11010	e
110110	fewf
110111	name
111000	ibwdbwdas
111001	fqwf
111010	das
111011	jui
11110	fw
111110	my
111111	dadasdad

For compression and decompression two files are given as arguments

Example 1
Codebook:
/
100000	Hi
110000	Will
111000	You
111100	Please
111110	pLeaseZ
111111	Do
011111	Me
001111	A
000111	Favor
000011	And
000001	Kindly
0000001	DIE
1111011	On
1000011	My
1000111	watch
1001111	It
1011111	Make
0111110	Feel
0111100	Pretty
0111000	Darn
0110000	Good
0100000	If
101000	I
101100	Say
101110	So
110100	Myself.
110110	Thanks.
110111	Bye!
111010	Me
111011	 

given file:
Please DIE   On Hi Will Please Good Thanks. Bye! 

expected binaryfile.hcz:
111100111011000000111101111101111101111110111110111000001110111100001110111111001110110110000111011110110111011110111111011

Example 2
Codebook:
/
01 a
11  
001 me
10 what
0001 lol

given binary file:
001110001110001111011011101110111

expected output file:
me lol lol what a a a a 
